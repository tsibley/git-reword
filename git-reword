#!/bin/bash
set -e -o pipefail

function usage() {
    cat <<.
usage: git reword <commit>
       git reword --help

Automatically performs an interactive rebase with the given commit
selected for rewording.
.
}

function main() {
    commit="$1"

    if [[ -z $commit ]]; then
        printf "No commit specified\n\n" >&2
        usage
        exit 1
    fi

    # Normalize commit so we can reliably append "^"
    commit="$(git rev-list -n 1 "$commit")"

    # Rebase commits starting with our commit of interest (by starting after
    # its parent).  Our sequence editor command will edit the given file in
    # place.  The first line is always the commit we want to reword.
    export GIT_SEQUENCE_EDITOR="perl -pi -e 's/^pick/reword/ if \$. == 1'"

    if ! git rebase --interactive "$commit^"; then
        echo >&2
        echo "Reword failed, commit message unchanged." >&2
        git rebase --abort
    fi
}

for arg; do
    case "$arg" in
        -h|--help)
            usage
            exit 0;;
        --)
            shift
            break;;
    esac
done

main "$@"
